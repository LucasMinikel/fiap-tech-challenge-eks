name: Terraform Apply

on:
  push:
    branches:
      - main

env:
  AWS_REGION: sa-east-1
  CLUSTER_NAME: tech-challenge-cluster

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Configurar AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Secrets Manager
        id: secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            MY_AWS_SECRET
          parse-json-secrets: true    

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0

      - name: Inicializar Terraform
        run: terraform init -upgrade

      - name: Formatar arquivos de configuração
        run: terraform fmt -check

      - name: Validar arquivos de configuração
        run: terraform validate

      - name: Planejar infraestrutura
        run: terraform plan

      - name: Aplicar infraestrutura
        run: terraform apply -auto-approve -input=false

      - name: Atualizar configuração do Kube
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Deploy common
        run: |
          kubectl apply -f k8s/common

      - name: Criar ou Atualizar Secrets no Kubernetes
        run: |
          kubectl create secret generic secret-common \
            --from-literal=TESTE=${{ env.MY_AWS_SECRET_TESTE }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy k8s
        run: |
          kubectl apply -f k8s/fpm
          kubectl apply -f k8s/webserver